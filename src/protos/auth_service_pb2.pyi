"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class AuthTokens(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCESSTOKEN_FIELD_NUMBER: builtins.int
    REFRESHTOKEN_FIELD_NUMBER: builtins.int
    accessToken: builtins.str
    refreshToken: builtins.str
    def __init__(
        self,
        *,
        accessToken: builtins.str = ...,
        refreshToken: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["accessToken", b"accessToken", "refreshToken", b"refreshToken"]) -> None: ...

global___AuthTokens = AuthTokens

@typing_extensions.final
class RegisterUserRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USERNAME_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    username: builtins.str
    password: builtins.str
    def __init__(
        self,
        *,
        username: builtins.str = ...,
        password: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["password", b"password", "username", b"username"]) -> None: ...

global___RegisterUserRequest = RegisterUserRequest

@typing_extensions.final
class RegisterUserResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUCCESS_FIELD_NUMBER: builtins.int
    TOKENS_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    success: builtins.bool
    @property
    def tokens(self) -> global___AuthTokens: ...
    message: builtins.str
    def __init__(
        self,
        *,
        success: builtins.bool = ...,
        tokens: global___AuthTokens | None = ...,
        message: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["tokens", b"tokens"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["message", b"message", "success", b"success", "tokens", b"tokens"]) -> None: ...

global___RegisterUserResponse = RegisterUserResponse

@typing_extensions.final
class LoginUserRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USERNAME_FIELD_NUMBER: builtins.int
    USER_ID_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    username: builtins.str
    user_id: builtins.int
    password: builtins.str
    def __init__(
        self,
        *,
        username: builtins.str = ...,
        user_id: builtins.int = ...,
        password: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["password", b"password", "user_id", b"user_id", "username", b"username"]) -> None: ...

global___LoginUserRequest = LoginUserRequest

@typing_extensions.final
class LoginUserResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUCCESS_FIELD_NUMBER: builtins.int
    TOKENS_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    success: builtins.bool
    @property
    def tokens(self) -> global___AuthTokens: ...
    message: builtins.str
    def __init__(
        self,
        *,
        success: builtins.bool = ...,
        tokens: global___AuthTokens | None = ...,
        message: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["tokens", b"tokens"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["message", b"message", "success", b"success", "tokens", b"tokens"]) -> None: ...

global___LoginUserResponse = LoginUserResponse

@typing_extensions.final
class ValidateTokenRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_ID_FIELD_NUMBER: builtins.int
    TOKEN_FIELD_NUMBER: builtins.int
    user_id: builtins.int
    token: builtins.str
    def __init__(
        self,
        *,
        user_id: builtins.int = ...,
        token: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["token", b"token", "user_id", b"user_id"]) -> None: ...

global___ValidateTokenRequest = ValidateTokenRequest

@typing_extensions.final
class ValidateTokenResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUCCESS_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    success: builtins.bool
    message: builtins.str
    def __init__(
        self,
        *,
        success: builtins.bool = ...,
        message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["message", b"message", "success", b"success"]) -> None: ...

global___ValidateTokenResponse = ValidateTokenResponse

@typing_extensions.final
class RefreshTokenRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TOKEN_FIELD_NUMBER: builtins.int
    token: builtins.str
    def __init__(
        self,
        *,
        token: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["token", b"token"]) -> None: ...

global___RefreshTokenRequest = RefreshTokenRequest

@typing_extensions.final
class RefreshTokenResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUCCESS_FIELD_NUMBER: builtins.int
    TOKENS_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    success: builtins.bool
    @property
    def tokens(self) -> global___AuthTokens: ...
    message: builtins.str
    def __init__(
        self,
        *,
        success: builtins.bool = ...,
        tokens: global___AuthTokens | None = ...,
        message: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["tokens", b"tokens"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["message", b"message", "success", b"success", "tokens", b"tokens"]) -> None: ...

global___RefreshTokenResponse = RefreshTokenResponse
